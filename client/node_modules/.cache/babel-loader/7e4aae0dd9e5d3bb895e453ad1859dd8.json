{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport shopActionTypes from \"./shop.types\";\n\nfunction* onFetchCollections() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    console.log(snapshot);\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nfunction* fetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, onFetchCollections);\n}\n\nexport default function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/shinj/Desktop/oasis clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","put","call","all","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","shopActionTypes","onFetchCollections","collectionRef","collection","snapshot","get","console","log","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;;AAEA,UAAUC,kBAAV,GAA+B;AAC3B,MAAI;AACA,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAMI,cAAc,GAAG,MAAMd,IAAI,CAACK,+BAAD,EAAkCK,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACY,cAAD,CAAxB,CAAT;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACI,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;;AAED,UAAUC,qBAAV,GAAkC;AAC9B,QAAMnB,UAAU,CACZQ,eAAe,CAACY,uBADJ,EAEZX,kBAFY,CAAhB;AAIH;;AAED,eAAe,UAAUY,SAAV,GAAsB;AACjC,QAAMlB,GAAG,CAAC,CACND,IAAI,CAACiB,qBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\"\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\"\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\"\r\nimport shopActionTypes from \"./shop.types\"\r\n\r\nfunction* onFetchCollections() {\r\n    try {\r\n        const collectionRef = firestore.collection(\"collections\");\r\n\r\n        const snapshot = yield collectionRef.get();\r\n        console.log(snapshot)\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n}\r\n\r\nfunction* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n        shopActionTypes.FETCH_COLLECTIONS_START,\r\n        onFetchCollections\r\n    )\r\n}\r\n\r\nexport default function* shopSagas() {\r\n    yield all([\r\n        call(fetchCollectionsStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}