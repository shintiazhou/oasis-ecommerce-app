{"ast":null,"code":"import { put, all, call, takeLatest } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure } from \"./user.actions\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\n\nfunction* getSnapShotFromUserAuth(user, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\n    const snapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield alert(error.message);\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield alert(error.message);\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* onSignInWithEmailStart() {\n  yield takeLatest(userActionTypes.SIGN_IN_WITH_EMAIL_START, signInWithEmail);\n}\n\nexport default function* userSagas() {\n  yield all([call(onSignInWithEmailStart)]);\n}","map":{"version":3,"sources":["C:/Users/shinj/Desktop/oasis clothing/src/redux/user/user.sagas.js"],"names":["put","all","call","takeLatest","userActionTypes","signInSuccess","signInFailure","auth","createUserProfileDocument","googleProvider","getSnapShotFromUserAuth","user","additionalData","userRef","snapShot","get","id","data","error","alert","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onSignInWithEmailStart","SIGN_IN_WITH_EMAIL_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACIC,aADJ,EAEIC,aAFJ,QAGO,gBAHP;AAKA,SACIC,IADJ,EAEIC,yBAFJ,EAGIC,cAHJ,QAIO,+BAJP;;AAMA,UAAUC,uBAAV,CAAkCC,IAAlC,EAAwCC,cAAxC,EAAwD;AACpD,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,EAAkCC,cAAlC,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMf,GAAG,CAACK,aAAa,CAAC;AACpBW,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EADO;AAEpB,SAAGF,QAAQ,CAACG,IAAT;AAFiB,KAAD,CAAd,CAAT;AAIH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAX;AACA,UAAMpB,GAAG,CAACM,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUG,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACxD,MAAI;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACC,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOO,KAAP,EAAc;AACZ,UAAMC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAX;AACA,UAAMpB,GAAG,CAACM,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUQ,sBAAV,GAAmC;AAC/B,QAAMvB,UAAU,CACZC,eAAe,CAACuB,wBADJ,EAEZN,eAFY,CAAhB;AAIH;;AAED,eAAe,UAAUO,SAAV,GAAsB;AACjC,QAAM3B,GAAG,CAAC,CACNC,IAAI,CAACwB,sBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { put, all, call, takeLatest } from \"redux-saga/effects\"\r\nimport userActionTypes from \"./user.types\"\r\nimport {\r\n    signInSuccess,\r\n    signInFailure\r\n} from \"./user.actions\"\r\n\r\nimport {\r\n    auth,\r\n    createUserProfileDocument,\r\n    googleProvider\r\n} from \"../../firebase/firebase.utils\"\r\n\r\nfunction* getSnapShotFromUserAuth(user, additionalData) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, user, additionalData)\r\n        const snapShot = yield userRef.get()\r\n        yield put(signInSuccess({\r\n            id: snapShot.id,\r\n            ...snapShot.data()\r\n        }))\r\n    } catch (error) {\r\n        yield alert(error.message)\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nfunction* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapShotFromUserAuth(user,)\r\n    } catch (error) {\r\n        yield alert(error.message)\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nfunction* onSignInWithEmailStart() {\r\n    yield takeLatest(\r\n        userActionTypes.SIGN_IN_WITH_EMAIL_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport default function* userSagas() {\r\n    yield all([\r\n        call(onSignInWithEmailStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}